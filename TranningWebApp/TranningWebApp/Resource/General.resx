<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Account" xml:space="preserve">
    <value>Account</value>
  </data>
  <data name="Active" xml:space="preserve">
    <value>Active</value>
  </data>
  <data name="Add" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="AddUser" xml:space="preserve">
    <value>Add User</value>
  </data>
  <data name="Approved" xml:space="preserve">
    <value>Approved</value>
  </data>
  <data name="Certified" xml:space="preserve">
    <value>Certified</value>
  </data>
  <data name="Cickheretologin" xml:space="preserve">
    <value>Click here to login</value>
  </data>
  <data name="ConfirmPassword" xml:space="preserve">
    <value>Confirm Password</value>
  </data>
  <data name="CoordinatorEvaluation" xml:space="preserve">
    <value>Coordinator Evaluation</value>
  </data>
  <data name="Country" xml:space="preserve">
    <value>Country</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="Enrolled" xml:space="preserve">
    <value>Enrolled</value>
  </data>
  <data name="Female" xml:space="preserve">
    <value>Female</value>
  </data>
  <data name="FirstName" xml:space="preserve">
    <value>First Name</value>
  </data>
  <data name="forgotentermsg" xml:space="preserve">
    <value>Please enter your email to get password</value>
  </data>
  <data name="Forgotpassword" xml:space="preserve">
    <value>Forgot password?</value>
  </data>
  <data name="Home" xml:space="preserve">
    <value>Home</value>
  </data>
  <data name="InActive" xml:space="preserve">
    <value>In Active</value>
  </data>
  <data name="invalidmsg" xml:space="preserve">
    <value>Wrong Username/ Password.Try again!</value>
  </data>
  <data name="LastName" xml:space="preserve">
    <value>Last Name</value>
  </data>
  <data name="Login" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="Logout" xml:space="preserve">
    <value>Logout</value>
  </data>
  <data name="Male" xml:space="preserve">
    <value>Male</value>
  </data>
  <data name="MobileNo" xml:space="preserve">
    <value>Mobile No</value>
  </data>
  <data name="NationalIdValidation" xml:space="preserve">
    <value>Nation Id is invalid enter the valid id</value>
  </data>
  <data name="Next" xml:space="preserve">
    <value>Next</value>
  </data>
  <data name="Noofparticipants" xml:space="preserve">
    <value>No of participants</value>
  </data>
  <data name="Norecordfound" xml:space="preserve">
    <value>No record found.</value>
  </data>
  <data name="Participants" xml:space="preserve">
    <value>Students</value>
  </data>
  <data name="PassordError" xml:space="preserve">
    <value>Password is weak</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="passwordmatch" xml:space="preserve">
    <value>The password and confirmation password do not match.</value>
  </data>
  <data name="passwordproceed" xml:space="preserve">
    <value>Please update your password to proceed</value>
  </data>
  <data name="PasswordResetEmailsent" xml:space="preserve">
    <value>Password Reset Email sent</value>
  </data>
  <data name="Pending" xml:space="preserve">
    <value>Pending</value>
  </data>
  <data name="Phone" xml:space="preserve">
    <value>Phone</value>
  </data>
  <data name="PhoneLengthValidation" xml:space="preserve">
    <value>Phone no is invalid enter the valid no</value>
  </data>
  <data name="PostEvaluation" xml:space="preserve">
    <value>Post Evaluation</value>
  </data>
  <data name="PreEvaluation" xml:space="preserve">
    <value>Pre Evaluation</value>
  </data>
  <data name="Prev" xml:space="preserve">
    <value>Prev</value>
  </data>
  <data name="Profile" xml:space="preserve">
    <value>Profile</value>
  </data>
  <data name="Role" xml:space="preserve">
    <value>Role</value>
  </data>
  <data name="Schools" xml:space="preserve">
    <value>Schools</value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="Select" xml:space="preserve">
    <value>Select</value>
  </data>
  <data name="SendEmail" xml:space="preserve">
    <value>Send Email</value>
  </data>
  <data name="SessionCalendar" xml:space="preserve">
    <value>Session Calendar</value>
  </data>
  <data name="Sessions" xml:space="preserve">
    <value>Sessions</value>
  </data>
  <data name="Signin" xml:space="preserve">
    <value>Sign in</value>
  </data>
  <data name="Signintoyouraccount" xml:space="preserve">
    <value>Sign in to your account</value>
  </data>
  <data name="SigninwithGoogle" xml:space="preserve">
    <value>Sign in with Google</value>
  </data>
  <data name="SigninwithLinkedin" xml:space="preserve">
    <value>Sign in with Linkedin</value>
  </data>
  <data name="Submit" xml:space="preserve">
    <value>Submit</value>
  </data>
  <data name="UpdatePassword" xml:space="preserve">
    <value>Update Password</value>
  </data>
  <data name="Username" xml:space="preserve">
    <value>Username</value>
  </data>
  <data name="Usernotfound" xml:space="preserve">
    <value>User not found</value>
  </data>
  <data name="Users" xml:space="preserve">
    <value>Users</value>
  </data>
  <data name="ValidatorRequired" xml:space="preserve">
    <value>This field can not be empty</value>
  </data>
  <data name="VolunteerEvaluation" xml:space="preserve">
    <value>Volunteer Evaluation</value>
  </data>
  <data name="Volunteers" xml:space="preserve">
    <value>Volunteers</value>
  </data>
  <data name="AddNew" xml:space="preserve">
    <value>Add New</value>
  </data>
  <data name="Copyright" xml:space="preserve">
    <value>Copyright Injaz Saudi © 2017.</value>
  </data>
  <data name="Middle" xml:space="preserve">
    <value>Middle</value>
  </data>
  <data name="Primary" xml:space="preserve">
    <value>Primary</value>
  </data>
  <data name="Secondary" xml:space="preserve">
    <value>Secondary</value>
  </data>
  <data name="ValidatorNumaric" xml:space="preserve">
    <value>Field must be an integer</value>
  </data>
  <data name="Choosefile" xml:space="preserve">
    <value>Choose file</value>
  </data>
  <data name="ViewReport" xml:space="preserve">
    <value>View Report</value>
  </data>
  <data name="ViewResult" xml:space="preserve">
    <value>View Result</value>
  </data>
  <data name="signup" xml:space="preserve">
    <value>Signup</value>
  </data>
  <data name="Emailempty" xml:space="preserve">
    <value>Email is empty at line</value>
  </data>
  <data name="EmailExist" xml:space="preserve">
    <value>Email already exist please choose another</value>
  </data>
  <data name="emailvalid" xml:space="preserve">
    <value>Email is not valid at line</value>
  </data>
  <data name="Mobileempty" xml:space="preserve">
    <value>Mobile is empty at line</value>
  </data>
  <data name="mobilevalid" xml:space="preserve">
    <value>Mobile is not valid at line</value>
  </data>
  <data name="nationalidempty" xml:space="preserve">
    <value>NationalID is empty at line</value>
  </data>
  <data name="nationalidvalid" xml:space="preserve">
    <value>NationalID is not valid at line</value>
  </data>
  <data name="RejectedBy" xml:space="preserve">
    <value>Rejected By</value>
  </data>
  <data name="VolunteerCertificateGenerated" xml:space="preserve">
    <value>Generated</value>
  </data>
  <data name="EditDetails" xml:space="preserve">
    <value>Edit Detail</value>
  </data>
  <data name="AcademicDegree" xml:space="preserve">
    <value>Academic degree</value>
  </data>
  <data name="AgeValidation" xml:space="preserve">
    <value>Enter age greater than 18</value>
  </data>
  <data name="AlreadyAccount" xml:space="preserve">
    <value>Already have an account?</value>
  </data>
  <data name="Bachelor" xml:space="preserve">
    <value>Bachelor</value>
  </data>
  <data name="Diploma" xml:space="preserve">
    <value>Diploma</value>
  </data>
  <data name="Fellowship" xml:space="preserve">
    <value>Fellowship</value>
  </data>
  <data name="HigherDiploma" xml:space="preserve">
    <value>Higher Diploma</value>
  </data>
  <data name="HowResetPassword" xml:space="preserve">
    <value>How to rest your password</value>
  </data>
  <data name="InstractionOption" xml:space="preserve">
    <value>We've just sent you instructions on</value>
  </data>
  <data name="Master" xml:space="preserve">
    <value>Master</value>
  </data>
  <data name="PHD" xml:space="preserve">
    <value>PHD</value>
  </data>
  <data name="ResetPassword" xml:space="preserve">
    <value>Password reset sent!</value>
  </data>
  <data name="SecondName" xml:space="preserve">
    <value>Second Name</value>
  </data>
  <data name="Specialization" xml:space="preserve">
    <value>Specialization</value>
  </data>
  <data name="ThirdName" xml:space="preserve">
    <value>Third Name</value>
  </data>
  <data name="TSignin" xml:space="preserve">
    <value>Sign In</value>
  </data>
  <data name="UniversitiesName" xml:space="preserve">
    <value>Universities Name</value>
  </data>
  <data name="Initial" xml:space="preserve">
    <value>Initial</value>
  </data>
  <data name="InProgress" xml:space="preserve">
    <value>In-Progress</value>
  </data>
  <data name="Issued" xml:space="preserve">
    <value>Issued</value>
  </data>
  <data name="Occured" xml:space="preserve">
    <value>Occured</value>
  </data>
  <data name="Rejected" xml:space="preserve">
    <value>Rejected</value>
  </data>
  <data name="Total" xml:space="preserve">
    <value>Total</value>
  </data>
</root>