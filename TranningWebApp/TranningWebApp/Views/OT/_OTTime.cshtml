@model TranningWebApp.Repository.DataAccess.orientation_training
@using TranningWebApp.Resource;
@{
    string type = ViewData["type"].ToString();
    string addtionalclass = ViewData["addtionalclass"].ToString();
 } 
<script type="text/javascript">
    function checkchange(obj)
    {
        var allCheckBoxs = $(obj).parent().parent().parent().find("input[type='checkbox']").not(".first");
        debugger;
        if($(obj).is(":checked"))
            allCheckBoxs.prop("checked",true);
        else
            allCheckBoxs.prop("checked", false);
        allCheckBoxs.trigger('change');
         
    }
</script>
<div id="@(type + "timeControl")" class="pull-left sessionTime ">
    <div class="form-group firstRow col-sm-12">
        <div class="col-sm-2" style="padding:0px">
            <input type="checkbox" onchange="checkchange(this)" checked class="@addtionalclass first"/>
        </div>
        
        <div class="col-sm-2" style="padding:0px">
            <b>@OT.Day</b>
        </div>
        <div class="col-sm-4">
            <b>@OT.From</b>
        </div>
        <div class="col-sm-4">
            <b>@OT.To</b>
        </div>
    </div>
    @{
        int dateDiff = 0;
         
            dateDiff = (Model.OTDateEnd - Model.OTDateTime).Value.Days;
         
    }

    @for (int i = 0; i <= dateDiff; i++)
    {
        string displayFromTime = "10:00 AM";
        string displayToTime = "11:00 AM";
        bool isActive = true;
        string readonlyS = ""; 
        TimeSpan timespan = TimeSpan.MinValue;
        if (Model.Id > 0)
        {
            
                timespan = Model.ot_time.ElementAt(i).ActualStartTime.Value;
            
           
            DateTime time = DateTime.Today.Add(timespan);
            displayFromTime = time.ToString("hh:mm tt");
           
                timespan = Model.ot_time.ElementAt(i).ActualEndTime.Value;
            
            time = DateTime.Today.Add(timespan);
            displayToTime = time.ToString("hh:mm tt");
           
                isActive = Model.ot_time.ElementAt(i).IsActive;
             
            readonlyS = isActive ? "" : "readonly";
        }
        else
        {
            if (Model.OTDateTime?.AddDays(i).DayOfWeek == DayOfWeek.Friday || Model.OTDateTime?.AddDays(i).DayOfWeek == DayOfWeek.Saturday)
            {
                isActive = false;
                readonlyS = "readonly";
            }
        }
        <div class='form-group col-sm-12 @addtionalclass'>
            <div class='col-sm-2' style='padding:0px'>
                <input type='checkbox' name='@(type+"check_"+i)'checked="@isActive" class="@addtionalclass" onchange="changeTimeCheck(this,'@(type+"FromTime_")','@(type+"ToTime_")', @i)" />
            </div>
          
            <div class='col-sm-2' style='padding:0px'>
                @(Model.OTDateTime?.AddDays(i).DayOfWeek.ToString().Substring(0, 3) + ", "+ Model.OTDateTime?.AddDays(i).ToString("dd MMM"))
            </div>
            <div class='col-sm-4'>
                <input type='text' name='@(type+"FromTime_"+i)' class='form-control timepicker @addtionalclass' value="@displayFromTime" @readonlyS />
            </div>
            <div class='col-sm-4'>
                <input type='text' class='form-control timepicker @addtionalclass' name='@(type+"ToTime_"+i)' value="@displayToTime"  @readonlyS />
            </div>
        </div>
    }


</div>

