@using TranningWebApp.Resource
@model TranningWebApp.Repository.DataAccess.participant_profile

@{
    ViewBag.Title = "Layout";
    string imagePath = Model.PhotoPath != null ? Model.PhotoPath.Replace("~", "") : "";
}

<main class="main">

    <!-- Breadcrumb -->
    <ol class="breadcrumb">
        <li class="breadcrumb-item">@General.Home</li>
        <li class="breadcrumb-item">@Participant.ParticipantLabel</li>
        </li>
        <li class="breadcrumb-item active">@Participant.CompleteProfile</li>

    </ol>

    <div class="container-fluid">
        <div class="animated fadeIn">

            @using (Html.BeginForm("ParticipantProfile", "Participant", FormMethod.Post, new { @class = "form-horizontal", enctype = "multipart/form-data", role = "form" }))
            {
                <div class="col-sm-6">

                    <div class="card">
                        <div class="card-header">
                            <strong class="text-primary"><i class="icon-plus"></i> @Participant.CompleteProfile</strong>
                        </div>
                        <div class="card-block">

                            <div class="form-group">
                                <label>@Participant.NationalId</label>
                                @Html.TextBoxFor(m => m.NationalID, new { @class = "form-control", @disabled = "disabled" })
                                @Html.ValidationMessageFor(m => m.NationalID, "", new { @class = "text-danger" })


                            </div>

                            <div class="form-group">
                                <label>@Participant.Name</label>
                             <input type="text" class = "form-control" name="Name" value="@(Model.Name + " " + Model.FatherName + " " + Model.Family)" disabled/>
                                @Html.ValidationMessageFor(m => m.Name, "", new { @class = "text-danger" })


                            </div>
                            <div class="form-group">
                                <label>@General.Email</label>
                                @Html.TextBoxFor(m => m.Email, new { @class = "form-control", @disabled = "disabled" })
                                @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })


                            </div>
                            <div class="form-group">
                                <label>@General.MobileNo</label>
                                @Html.TextBoxFor(m => m.Mobile, new { @class = "form-control phone", @maxlength = 10 })
                                @Html.ValidationMessageFor(m => m.Mobile, "", new { @class = "text-danger" })


                            </div>
                            <div class="form-group">
                                <label>@Participant.Gender</label>
                                @Html.DropDownListFor(m => m.Gender, (List<SelectListItem>)ViewBag.gender, new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.Gender, "", new { @class = "text-danger" })


                            </div>
                            <div class="row">
                                <div class="form-group col-sm-6" >
                                    <label style="width: 100%">@Volunteer.DateofBirth</label>
                                    <label style="font-style: italic">@Coordinator.Gorgian</label>
                                    @Html.TextBoxFor(m => m.DateOfBirth, "{0:dd/MM/yyyy}", new { @class = "form-control date" })
                                    @Html.ValidationMessageFor(m => m.DateOfBirth, "", new { @class = "text-danger" })

                                </div>
                                <div class="form-group col-sm-6" style="margin-top:0.5%">
                                    <label style="width: 100%"></label>
                                    <label style="font-style: italic">@OT.Hijri</label>
                                    @Html.TextBoxFor(m => m.IslamicDate, new { @class = "form-control date-islamic" })
                                </div>
                            </div>
                            

                            <div class="form-group">
                                <label>@Participant.ProgramName</label>
                                @Html.DropDownListFor(m => m.ProgrammName1, (List<SelectListItem>)ViewBag.sessions, new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.ProgrammName1, "", new { @class = "text-danger" })


                            </div>
                            <div class="form-group">
                                <label>@Participant.FartherMobileNumber</label>
                                @Html.TextBoxFor(m => m.FatherMobile, new { @class = "form-control phone" , @maxlength = 10 })
                                @Html.ValidationMessageFor(m => m.FatherMobile, "", new { @class = "text-danger" })


                            </div>


                            <div class="form-group">
                                <label>@Participant.Photo</label>
                                <input type="file" name="file" id="profile-img">
                                <hr>
                                <img src="@imagePath" id="profile-img-tag" width="150" height="150" />

                                <script type="text/javascript">
                                    function readURL(input) {
                                        if (input.files && input.files[0]) {
                                            var reader = new FileReader();

                                            reader.onload = function (e) {
                                                $('#profile-img-tag').attr('src', e.target.result);
                                            }
                                            reader.readAsDataURL(input.files[0]);
                                        }
                                    }
                                    $("#profile-img").change(function () {
                                        readURL(this);
                                    });
                                </script>


                            </div>

                        </div>
                    </div>
                </div>
                <div class="col-sm-6">

                    <div class="card">
                        <div class="card-header">
                            <strong class="text-primary">@Participant.OtherDetails</strong>
                        </div>
                        <div class="card-block">
                            <div class="form-group">
                                <label for="country">@Coordinator.City</label>
                                @Html.DropDownListFor(m => m.City, (List<SelectListItem>)ViewBag.citiesdd, new { @class = "form-control", onchange = "channge(this)" })
                                @Html.ValidationMessageFor(m => m.City, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group">
                                <label>@Participant.School</label>
                                @Html.DropDownListFor(m => m.SchoolId, (List<SelectListItem>)ViewBag.school, new { @class = "form-control" })
                            </div>
                            <div class="form-group">
                                <label>@Participant.Stage</label>
                                @Html.DropDownListFor(m => m.school.StageOfSchool, (List<SelectListItem>)ViewBag.stageofschooldd, new { @class = "form-control" })

                            </div>
                            <div class="form-group">
                                <label>@Participant.Class</label>
                                @Html.TextBoxFor(m => m.Class, new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.Class, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                <label>@Participant.Facebook</label>
                                @Html.TextBoxFor(m => m.FacebookAddress, new { @class = "form-control" }) 
                            </div> 
                            <div class="form-group">
                                <label>@Participant.Twitter</label>
                                @Html.TextBoxFor(m => m.TwitterAddress, new { @class = "form-control" })


                            </div>
                            <div class="form-group">
                                <label>@Participant.Snapchat</label>
                                @Html.TextBoxFor(m => m.SnapChatAddress, new { @class = "form-control" })


                            </div>
                        
                            <div class="form-group">
                                <label>@Participant.Instagram</label>
                                @Html.TextBoxFor(m => m.Instagram, new { @class = "form-control" })


                            </div>
                            
                        </div>
                        <div class="card-footer">
                            <button type="submit" class="btn btn-sm btn-primary pull-right"><i class="fa fa-dot-circle-o"></i> @General.Submit</button>
                        </div>

                    </div>

                </div>
                @Html.HiddenFor(x => x.Id)
            }
        </div>
    </div>
</main>
